#!/usr/bin/env node

// Dependencies
const config = require('../config');
const App = require('../app');
const path = require('path');
const dotenv = require('dotenv').config({ path: path.join(__dirname, '../../.env') });

const log = config.logger;

/* Start the application */
const app = App(config);
const port = normalizePort(process.env.PORT || '3000')
app.set('port', port);

const server = app.listen(app.get('port'));
server.on('error', onError);
server.on('listening', onListening);

function normalizePort(input) {
    var port = parseInt(input, 10);

    if(isNaN(port)) {
        return input;
    }

    if(port >= 0) {
        return port;
    }

    return false;
}

function onError(error) {
    if(error.syscall !== 'listten') {
        throw error;
    }

    const bind = typeof port === 'string' ? 'Pipe ' + port : 'Port ' + port;

    // handle specific listen errors with friendly messages
    switch(error.code) {
        case 'EACCES':
            log.fatal(bind + ' requires elevated privileges');
            process.exit(1);
            break;
        case 'EADDRINUSE':
            log.fatal(bind + ' is already in use');
            process.exit(1);
            break;
        default:
            throw error;
    }
}

function onListening() {
    const addr = server.address();
    const bind = typeof addr === 'string' ? 'pipe ' + addr : 'port ' + addr.port;
    log.info(`${config.applicationName} listening on ${bind}`);
}